// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Proyecto.net_core.Models;

#nullable disable

namespace Proyecto.net_core.Migrations
{
    [DbContext(typeof(LibreriaContext))]
    [Migration("20240117054754_estilos")]
    partial class estilos
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Proyecto.net_core.Models.Entidades.Autor", b =>
                {
                    b.Property<int>("id_autor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_autor"));

                    b.Property<string>("apellido_autor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombre_autor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id_autor");

                    b.ToTable("Autores");
                });

            modelBuilder.Entity("Proyecto.net_core.Models.Entidades.Categoria", b =>
                {
                    b.Property<int>("id_categoria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_categoria"));

                    b.Property<string>("descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombre_categoria")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id_categoria");

                    b.ToTable("categorias");
                });

            modelBuilder.Entity("Proyecto.net_core.Models.Entidades.DetalleVenta", b =>
                {
                    b.Property<int>("id_detalleVenta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_detalleVenta"));

                    b.Property<int>("Libroid_libro")
                        .HasColumnType("int");

                    b.Property<int>("Ventasid_ventas")
                        .HasColumnType("int");

                    b.Property<int>("cantidad")
                        .HasColumnType("int");

                    b.Property<int>("id_libro")
                        .HasColumnType("int");

                    b.Property<int>("id_venta")
                        .HasColumnType("int");

                    b.HasKey("id_detalleVenta");

                    b.HasIndex("Libroid_libro");

                    b.HasIndex("Ventasid_ventas");

                    b.ToTable("Detalle_Ventas");
                });

            modelBuilder.Entity("Proyecto.net_core.Models.Entidades.Editorial", b =>
                {
                    b.Property<int>("id_editorial")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_editorial"));

                    b.Property<string>("nombre_editorial")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id_editorial");

                    b.ToTable("Editoriales");
                });

            modelBuilder.Entity("Proyecto.net_core.Models.Entidades.Libro", b =>
                {
                    b.Property<int>("id_libro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_libro"));

                    b.Property<int>("Autorid_autor")
                        .HasColumnType("int");

                    b.Property<int>("Editorialid_editorial")
                        .HasColumnType("int");

                    b.Property<string>("URLImagen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("año")
                        .HasColumnType("int");

                    b.Property<int>("categoriaid_categoria")
                        .HasColumnType("int");

                    b.Property<bool>("estado")
                        .HasColumnType("bit");

                    b.Property<int>("id_autor")
                        .HasColumnType("int");

                    b.Property<int>("id_categoria")
                        .HasColumnType("int");

                    b.Property<int>("id_editorial")
                        .HasColumnType("int");

                    b.Property<decimal>("precio")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("titulo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("url_libro")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id_libro");

                    b.HasIndex("Autorid_autor");

                    b.HasIndex("Editorialid_editorial");

                    b.HasIndex("categoriaid_categoria");

                    b.ToTable("Libros");
                });

            modelBuilder.Entity("Proyecto.net_core.Models.Entidades.Roles", b =>
                {
                    b.Property<int>("id_rol")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_rol"));

                    b.Property<string>("nombre_rol")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id_rol");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("Proyecto.net_core.Models.Entidades.Usuario", b =>
                {
                    b.Property<int>("id_usuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_usuario"));

                    b.Property<string>("URLFotoPerfil")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("correo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombre_usuario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id_usuario");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("Proyecto.net_core.Models.Entidades.Ventas", b =>
                {
                    b.Property<int>("id_ventas")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_ventas"));

                    b.Property<int>("Usuarioid_usuario")
                        .HasColumnType("int");

                    b.Property<decimal>("descuentos")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("id_usuario")
                        .HasColumnType("int");

                    b.Property<decimal>("iva")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("subtotal")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("id_ventas");

                    b.HasIndex("Usuarioid_usuario");

                    b.ToTable("Ventas");
                });

            modelBuilder.Entity("Proyecto.net_core.Models.Entidades.DetalleVenta", b =>
                {
                    b.HasOne("Proyecto.net_core.Models.Entidades.Libro", "Libro")
                        .WithMany()
                        .HasForeignKey("Libroid_libro")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Proyecto.net_core.Models.Entidades.Ventas", "Ventas")
                        .WithMany()
                        .HasForeignKey("Ventasid_ventas")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Libro");

                    b.Navigation("Ventas");
                });

            modelBuilder.Entity("Proyecto.net_core.Models.Entidades.Libro", b =>
                {
                    b.HasOne("Proyecto.net_core.Models.Entidades.Autor", "Autor")
                        .WithMany()
                        .HasForeignKey("Autorid_autor")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Proyecto.net_core.Models.Entidades.Editorial", "Editorial")
                        .WithMany()
                        .HasForeignKey("Editorialid_editorial")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Proyecto.net_core.Models.Entidades.Categoria", "categoria")
                        .WithMany()
                        .HasForeignKey("categoriaid_categoria")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Autor");

                    b.Navigation("Editorial");

                    b.Navigation("categoria");
                });

            modelBuilder.Entity("Proyecto.net_core.Models.Entidades.Ventas", b =>
                {
                    b.HasOne("Proyecto.net_core.Models.Entidades.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("Usuarioid_usuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });
#pragma warning restore 612, 618
        }
    }
}
